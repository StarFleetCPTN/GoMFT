package search

import (
	"context"
	"strconv"
	"github.com/starfleetcptn/gomft/components/file_metadata"
	"github.com/starfleetcptn/gomft/components/file_metadata/list"
	"github.com/starfleetcptn/gomft/components/file_metadata/utils"
	"github.com/starfleetcptn/gomft/components/layout"
)

// FileMetadataSearch renders the search interface for file metadata
templ FileMetadataSearch(ctx context.Context, data file_metadata.FileMetadataSearchData) {
	@layout.LayoutWithContext("Search Files", ctx) {
		<!-- Status and Error Messages -->
		<div id="toast-container" class="fixed top-5 right-5 z-50 flex flex-col gap-2"></div>
		
		@utils.fileMetadataJS()
		
		<div id="search-container" style="min-height: 100vh;" class="bg-gray-50 dark:bg-gray-900">
			<div class="pb-8 w-full">
				<div class="mb-6 flex flex-col md:flex-row md:items-center md:justify-between gap-4">
					<h1 class="text-2xl font-bold text-gray-900 dark:text-white flex items-center">
						<i class="fas fa-search w-6 h-6 mr-2 text-blue-500"></i>
						Search Files
					</h1>
					<div class="flex gap-3">
						<a href="/files" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">
							<i class="fas fa-arrow-left mr-2"></i> Back to Files
						</a>
					</div>
				</div>
				
				<div class="bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 w-full">
					<!-- Card header -->
					<div class="p-4 md:p-5 border-b border-gray-200 dark:border-gray-700">
						<h5 class="text-xl font-bold leading-none text-gray-900 dark:text-white">
							Search Results
						</h5>
						<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
							Found { strconv.FormatInt(data.TotalCount, 10) } files matching your criteria
						</p>
					</div>
					
					<!-- Card content -->
					<div class="p-4 md:p-5">
						@list.FileMetadataListPartial(ctx, file_metadata.FileMetadataListData{
							Files: data.Files,
							Page: data.Page,
							Limit: data.Limit,
							TotalCount: data.TotalCount,
							TotalPages: data.TotalPages,
						})
					</div>
				</div>
			</div>

			<script>
				// Set dark background color if in dark mode
				if (document.documentElement.classList.contains('dark')) {
					document.getElementById('search-container').style.backgroundColor = '#111827';
				}
				
				// Add event listener for theme changes
				document.addEventListener('DOMContentLoaded', function() {
					const themeToggle = document.getElementById('theme-toggle');
					if (themeToggle) {
						themeToggle.addEventListener('click', function() {
							setTimeout(function() {
								const isDark = document.documentElement.classList.contains('dark');
								document.getElementById('search-container').style.backgroundColor = isDark ? '#111827' : 'rgb(249, 250, 251)';
							}, 50);
						});
					}
				});
			</script>
		</div>
	}
} 